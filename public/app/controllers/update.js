// Generated by CoffeeScript 1.8.0
(function() {
  define(function(require, exports, module) {
    var App, ConfirmationView, Marionette, ReviewView, moment, msgBus, originalAppointment, view;
    Marionette = require('marionette');
    App = require('app');
    msgBus = require('msgbus');
    moment = require('moment');
    ReviewView = require('views/update/review');
    ConfirmationView = require('views/update/confirmation');
    view = null;
    originalAppointment = null;
    App.flow = 'update';
    module.exports = Marionette.Controller.extend({
      index: function(id) {
        return require(['entities/appointment'], function() {
          var promise;
          promise = msgBus.reqres.request('entities:appointment', id);
          promise.done(function(appointment) {
            var date, startDate, uiDate;
            originalAppointment = appointment;
            date = appointment.get('startDate');
            startDate = moment(date).format('YYYY-MM-DD');
            uiDate = moment(date).format('MMM D @ H A');
            msgBus.reqres.request('schedule:header', {
              pageTitle: 'Reschedule Training',
              subTitle: 'edit the time for <strong>' + uiDate + '</strong> and notify your trainer'
            });
            msgBus.reqres.request('schedule:calendar:navigation', {
              startDate: startDate
            });
            App.filterCriteria.set({
              startDate: startDate,
              trainerId: appointment.get('trainerId'),
              trainerName: appointment.get('trainerFirstName' + ' ' + appointment.get('trainerLastName')),
              sessionTypeId: appointment.get('sessionTypeId'),
              duration: appointment.get('duration')
            });
            App.filterCriteria.trigger('change');
            return App.analytics.set({
              action: 'edit-start'
            });
          });
          promise.fail(function(model, jqXHR, textStatus) {});
          return msgBus.reqres.request('schedule:error', {
            error: [model, jqXHR, textStatus]
          });
        });
      },
      review: function(appointment) {
        msgBus.reqres.request('schedule:header', {
          pageTitle: 'Review your session',
          subTitle: null
        });
        view = new ReviewView({
          model: appointment,
          original: originalAppointment
        });
        App.layout.navigation.close();
        App.layout.content.show(view);
        return App.analytics.set({
          action: 'edit-review'
        });
      },
      confirmation: function(appointment) {
        var data;
        appointment.set({
          id: originalAppointment.id
        });
        data = _.pick(appointment.toJSON(), 'id', 'sessionTypeId', 'trainerId', 'startDate', 'endDate', 'message');
        require(['entities/update'], function() {
          var promise;
          promise = msgBus.reqres.request('entities:update:appointment', data);
          return promise.done(function(response) {});
        });
        appointment.set({
          id: response.id,
          APIEndpoint: App.APIEndpoint
        });
        msgBus.reqres.request('schedule:header', {
          pageTitle: 'Enjoy your workout.',
          subTitle: null
        });
        view = new ConfirmationView({
          model: appointment,
          original: originalAppointment
        });
        App.layout.navigation.close();
        App.layout.content.show(view);
        App.analytics.set({
          action: 'edit-complete'
        });
        return promise.fail(function(response) {
          return msgBus.reqres.request('schedule:error', response.responseJSON);
        });
      }
    });
  });

}).call(this);

//# sourceMappingURL=update.js.map
