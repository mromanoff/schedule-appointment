// Generated by CoffeeScript 1.8.0

/**
 * App Controller
 *
 * This is the base controller for the account app. In here, we simply manage
 * the firing of the appropriate sub-controller logic for each page. Note how
 * we do not require all Views, Models, Layouts and Forms on top. Instead, we
 * we load them only when needed via a require() call inside each method. This
 * will ensure the app does not load too much into memory.
 *
 * @augments Backbone.Model
 * @name ScheduleApp
 * @class AppController
 * @return module
 */

(function() {
  define(function(require, exports, module) {
    var Marionette;
    Marionette = require('marionette');
    module.exports = Marionette.Controller.extend({

      /**
      * render index page for schedule appointment flow
      * @param {string} [date] - date in 2014-05-31 format
       */
      create: function(date) {
        return require(['controllers/create'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.index(date);
        });
      },

      /**
       * render review page for schedule appointment flow
       * @param {object} appointment - Selected Appointment model
       */
      createReview: function(appointment) {
        return require(['controllers/create'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.review(appointment);
        });
      },

      /**
       * render confirmation page for schedule appointment flow
       * @param {object} appointment - Selected Appointment model
       */
      createConfirmation: function(appointment) {
        return require(['controllers/create'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.confirmation(appointment);
        });
      },

      /**
      * render index page for cancel appointment flow
      * @param {id} id - Appointment ID
       */
      cancel: function(id) {
        return require(['controllers/cancel'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.index(id);
        });
      },

      /**
      * render review page for cancel appointment flow
      * @param {object} appointment - Selected Appointment model
       */
      cancelReview: function(appointment) {
        var controller;
        require(['controllers/cancel'], function(Controller) {});
        controller = new Controller();
        return controller.review(appointment);
      },

      /**
      * render confirmation page for cancel appointment flow
      * @param {object} appointment - Selected Appointment model
       */
      cancelConfirmation: function(appointment) {
        return require(['controllers/cancel'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.confirmation(appointment);
        });
      },

      /**
      * render index page for update appointment flow
      * @param {string} id - Selected Appointment ID
       */
      update: function(id) {
        return require(['controllers/update'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.index(id);
        });
      },

      /**
      * render review page for update appointment flow
      * @param {object} appointment - Selected Appointment model
       */
      updateReview: function(appointment) {
        return require(['controllers/update'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.review(appointment);
        });
      },

      /**
      * render confirmation page for update appointment flow
      * @param {object} appointment - Selected Appointment model
       */
      updateConfirmation: function(appointment) {
        return require(['controllers/update'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.confirmation(appointment);
        });
      },

      /**
       * render index page for detail appointment flow
       * @param {string} id - Selected Appointment ID
       */
      detail: function(id) {
        return require(['controllers/detail'], function(Controller) {
          var controller;
          controller = new Controller(id);
          return controller.index(id);
        });
      },

      /**
       * render calendar component
       */
      calendar: function() {
        return require(['controllers/calendar'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.index();
        });
      },

      /**
      * Create calendar navigation component
      * @param {object} options - Options object
       */
      navigation: function(options) {
        return require(['controllers/calendar-navigation'], function(Controller) {
          var controller;
          controller = new Controller(options);
          return controller.index(options);
        });
      },

      /**
      * Create header component
      * @param {object} options - Options object
       */
      header: function(options) {
        return require(['controllers/header'], function(Controller) {
          var controller;
          controller = new Controller(options);
          return controller.initialize(options);
        });
      },

      /**
       * Create filter component, filter by Trainer and Duration
       */
      trainerFilter: function() {
        return require(['controllers/trainer'], function(Controller) {
          var controller;
          controller = new Controller();
          return controller.initialize();
        });
      },

      /**
      * Render an error page
      * @param {object} options - Options object
       */
      error: function(options) {
        return require(['controllers/error'], function(Controller) {
          var controller;
          controller = new Controller(options);
          return controller.initialize(options);
        });
      },

      /**
      *   Scroll page to the top.
      *   TODO: move to helper file
       */
      scroll: function() {
        $(document).scrollTop(0);
        $('#app-main').css({
          opacity: 0
        }).animate({
          opacity: 1
        }, 600);
      },

      /**
      *   Route to default page. Full app reload
       */
      defaultPage: function() {
        return Backbone.history.navigate('', {
          trigger: true
        });
      }
    });
  });

}).call(this);

//# sourceMappingURL=app_controller.js.map
